% meow/1

struct hex(bytes: byte-array);

def #hex from(Bytes: byte-array) -> hex {
  new hex(Bytes);
}

def #hex decode(Text: text) -> hex {
  new hex(foreign hex.decode(Text));
} test {
  assert #hex decode("") bytes() ==> <<>>;
  assert #hex decode("61") bytes() ==> "a" utf8-bytes();
  assert #hex decode("4974207761732061206461726b2c2073746f726d79206e69676874") bytes()
    ==> "It was a dark, stormy night" utf8-bytes();
}

def hex bytes() {
  self.bytes;
}

def hex encode() -> text {
  foreign hex.encode(self.bytes);
} test {
  assert #hex from("It was a dark, stormy night" utf8-bytes()) encode()
    ==> "4974207761732061206461726b2c2073746f726d79206e69676874";
  assert #hex from("a" utf8-bytes()) encode() ==> "61";
  assert #hex from(<<>>) encode() ==> "";
}

def hex === (X: hex) -> bool {
  self.bytes === X.bytes;
}

def hex =/= (X: hex) -> bool {
  self.bytes =/= X.bytes;
}
