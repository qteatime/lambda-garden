% meow/1

//#region - Native-sized integer (int) -----------------------------------------
implement signedness for int;

pure def int absolute() -> int {
  when {
    self < 0 -> -(self);
    otherwise -> self;
  }
} test {
  assert 0 absolute() ==> 0;
  assert 1 absolute() ==> 1;
  assert -1 absolute() ==> 1;
}

pure def int sign() -> sign {
  when {
    self < 0 -> sign..negative;
    otherwise -> sign..positive;
  }
} test {
  assert -1 sign() ==> sign..negative;
  assert 0 sign() ==> sign..positive;
  assert 1 sign() ==> sign..positive;
}
//#endregion

//#region - 64-bit sized integer (i64) -----------------------------------------
implement signedness for i64;

pure def i64 absolute() -> i64 {
  when {
    self < 0L -> -(self);
    otherwise -> self;
  }
} test {
  assert 0L absolute() ==> 0L;
  assert 1L absolute() ==> 1L;
  assert -1L absolute() ==> 1L;
}

pure def i64 sign() -> sign {
  when {
    self < 0L -> sign..negative;
    otherwise -> sign..positive;
  }
} test {
  assert -1L sign() ==> sign..negative;
  assert 0L sign() ==> sign..positive;
  assert 1L sign() ==> sign..positive;
}
//#endregion