% meow/1

open package meow.json;

def #env empty() =
  new env(filters: [:]);

def #env basic() =
  new env(filters: [
    "text": filter text(_),
    "trim": filter trim(_),
    "source-text": filter source-text(_),
  ]);


def env ++ (That: env) =
  new env(filters: self.filters ++ That.filters);

def env apply(Name: text, to Value: unknown) {
  (self.filters at!(Name))(Value);
} test {
  let E = #env basic();
  assert E apply("trim", to: "  a  ") ==> "a";
  assert E apply("text", to: 123) ==> "123";
}



def filter text(X: text) = X;
def filter text(X: int) = X as text;
def filter text(X: f64) = X as text;
def filter text(X: i64) = X as text;
def filter text(X: bool) = X as text;
def filter text(X: nothing) = "nothing";

def filter trim(X: text) = X trim();

def filter source-text(X: text) = json serialise(X) unwrap();
